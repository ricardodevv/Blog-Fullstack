{"version":3,"sources":["services/blogs.js","services/login.js","components/Notification.js","components/LoginForm.js","components/Togglabe.js","components/Blog.js","components/BlogForm.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","request","axios","get","response","data","createBlog","newObject","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","Notification","message","className","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","type","value","name","onChange","Togglable","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","onClick","buttonLabel","children","Blog","blog","title","likes","BlogForm","addBlog","newTitle","handleTitle","newAuthor","handleAuthor","newContent","handleContent","blogs","map","App","setBlogs","setNewTitle","setNewAuthor","setNewContent","setUsername","setPassword","user","setUser","errorMessage","setErrorMessage","useEffect","blogService","getBlogs","loggedUserJSON","window","localStorage","getItem","JSON","parse","event","target","vale","handleLogin","preventDefault","loginService","setItem","stringify","setTimeout","blogObject","author","content","returned","concat","console","log","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ff19be8.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const request = axios.get(baseUrl)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst createBlog = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\r\n  const response = await request \r\n  return response.data\r\n}\r\n\r\nexport default { getAll, createBlog, update, setToken } ","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data \r\n}\r\n\r\nexport default { login }","import '../App.css'\r\nimport React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  } \r\n\r\n  export default Notification ","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n  handleSubmit,\r\n  handleUsernameChange,\r\n  handlePasswordChange,\r\n  username,\r\n  password\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n          <div>\r\n            username\r\n              <input\r\n              type=\"text\"\r\n              value={username}\r\n              name=\"Username\"\r\n              onChange={handleUsernameChange}\r\n              />\r\n          </div>\r\n          <div>\r\n            password\r\n              <input\r\n              type=\"password\"\r\n              value={password}\r\n              name=\"Password\"\r\n              onChange={handlePasswordChange}\r\n              />\r\n          </div>\r\n          <button type=\"submit\">login</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\n\r\nconst Togglable = (props) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n  \r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div style={hideWhenVisible}>\r\n          <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Togglable","import React from 'react'\r\n\r\nconst Blog = ({ blog }) => { \r\n  return (\r\n    <div>\r\n      <b>Title: </b> {blog.title} <b>Likes: </b> {blog.likes} \r\n    <hr></hr>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport Blog from './Blog'\r\n\r\nconst BlogForm = ({ addBlog, newTitle, handleTitle, newAuthor, handleAuthor, newContent, handleContent, blogs }) => {\r\n  <form onSubmit={addBlog}>\r\n      <div>\r\n        <div>\r\n          Title:  \r\n            <input\r\n            type=\"text\"\r\n            value={newTitle}\r\n            onChange={handleTitle}\r\n            />\r\n        </div>\r\n          \r\n        <div>\r\n          Author:\r\n            <input\r\n            type=\"text\"\r\n            value={newAuthor}\r\n            onChange={handleAuthor}\r\n            />\r\n        </div>\r\n          \r\n        <div>\r\n          Content:\r\n            <input\r\n            type=\"text\"\r\n            value={newContent}\r\n            onChange={handleContent}\r\n            />\r\n        </div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n      \r\n      <div>\r\n        {blogs.map(blog => \r\n          <Blog key={blog.id} blog={blog} />\r\n        )}\r\n      </div>  \r\n    </form>\r\n}\r\n\r\nexport default BlogForm","import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs' \nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport './App.css'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglabe'\nimport BlogForm from './components/BlogForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newContent, setNewContent] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    const getBlogs = async () => {\n      const blogs = await blogService.getAll()\n      setBlogs(blogs)\n      }\n    getBlogs()\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  // Handlers \n  const handleTitle = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthor = (event) => {\n    setNewAuthor(event.target.vale)\n  }\n\n  const handleContent = (event) => {\n    setNewContent(event.target.value)\n  }\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.vale)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  // ----- Add blog function ------\n  const addBlog = async (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      content: newContent,\n      }\n    const blog = blogService.createBlog(blogObject)\n    const returned = await blog\n    setBlogs(blogs.concat(returned))\n\n    setNewTitle('')\n    setNewAuthor('')\n    setNewContent('')\n  }\n\n  console.log(user)\n\n  const loginForm = () => (\n    <Togglable buttonLabel='login'>\n      <LoginForm \n        handleSubmit={handleLogin}\n        handleUsernameChange={handleUsernameChange}\n        handlePasswordChange={handlePasswordChange}\n        username={username}\n        password={password}\n        />\n    </Togglable>\n  )\n\n  const blogForm = () => (\n    <Togglable buttonLabel=\"new note\">\n      <BlogForm\n        addBlog={addBlog}\n        newTitle={newTitle}\n        handleTitle={handleTitle}\n        newAuthor={newAuthor}\n        handleAuthor={handleAuthor}\n        newContent={newContent}\n        handleContent={handleContent}\n        blogs={blogs}\n      />   \n    </Togglable>\n  )  \n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n    \n\n  return (\n    <div className=\"App\">\n      <h2>Blogs</h2>\n\n      <Notification message={errorMessage}/>\n\n      {user === null ? \n        loginForm() :\n        <div>\n          <p>\n            {user.name} logged-in\n            <button onClick={(() => logOut())}>Log out</button>\n          </p>\n          {blogForm()}\n        </div> \n      }\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}