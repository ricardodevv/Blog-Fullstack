{"version":3,"sources":["services/blogs.js","components/Notification.js","services/login.js","components/LoginForm.js","components/Togglabe.js","components/Blog.js","components/BlogForm.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","request","axios","get","response","data","createBlog","newObject","config","headers","Authorization","post","update","id","put","setToken","newToken","Notification","message","className","login","credentials","LoginForm","handleLogin","useState","username","setUsername","password","setPassword","logIn","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","onSubmit","type","value","name","onChange","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","Blog","blog","title","likes","BlogForm","blogs","newTitle","setNewTitle","newAuthor","setNewAuthor","newContent","setNewContent","author","content","vale","map","App","setBlogs","setUser","errorMessage","setErrorMessage","useEffect","blogService","getBlogs","loggedUserJSON","getItem","parse","exception","setTimeout","addBlog","blogObject","blogFormRef","current","returned","concat","console","log","useRef","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2467f0a4.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const request = axios.get(baseUrl)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst createBlog = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\r\n  const response = await request \r\n  return response.data\r\n}\r\n\r\nexport default { getAll, createBlog, update, setToken } ","import '../App.css'\r\nimport React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  } \r\n\r\n  export default Notification ","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data \r\n}\r\n\r\nexport default { login }","import React, { useState } from 'react'\r\nimport loginService from '../services/login'\r\n\r\nconst LoginForm = ({\r\n  handleLogin,\r\n}) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value)\r\n  }\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  const logIn = async (event) => {\r\n    event.preventDefault()\r\n    const user = await loginService.login({\r\n      username, password,\r\n    })\r\n\r\n    window.localStorage.setItem(\r\n      'loggedBlogappUser', JSON.stringify(user)\r\n    )\r\n\r\n    handleLogin(user)\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={logIn}>\r\n          <div>\r\n            username\r\n              <input\r\n              type=\"text\"\r\n              value={username}\r\n              name=\"Username\"\r\n              onChange={handleUsernameChange}\r\n              />\r\n          </div>\r\n          <div>\r\n            password\r\n              <input\r\n              type=\"password\"\r\n              value={password}\r\n              name=\"Password\"\r\n              onChange={handlePasswordChange}\r\n              />\r\n          </div>\r\n          <button type=\"submit\">login</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n  \r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n        <div style={hideWhenVisible}>\r\n          <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n        </div>\r\n      </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import React from 'react'\r\n\r\nconst Blog = ({ blog }) => { \r\n  return (\r\n    <div>\r\n      <b>Title: </b> {blog.title} <b>Likes: </b> {blog.likes} \r\n    <hr></hr>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Blog","import React, { useState } from 'react'\r\nimport Blog from './Blog'\r\n\r\nconst BlogForm = ({ createBlog, blogs }) => {\r\n  const [newTitle, setNewTitle] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newContent, setNewContent] = useState('')\r\n\r\n  const handleTitle = (event) => {\r\n    setNewTitle(event.target.value)\r\n  }\r\n\r\n  const handleAuthor = (event) => {\r\n    setNewAuthor(event.target.vale)\r\n  }\r\n\r\n  const handleContent = (event) => {\r\n    setNewContent(event.target.value)\r\n  }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: newTitle,\r\n      author: newAuthor,\r\n      content: newContent,\r\n    })\r\n    \r\n    setNewTitle('')\r\n    setNewAuthor('')\r\n    setNewContent('')\r\n  }\r\n\r\n  return (\r\n  <form onSubmit={addBlog}>\r\n      <div>\r\n        <div>\r\n          Title:  \r\n            <input\r\n            type=\"text\"\r\n            value={newTitle}\r\n            onChange={handleTitle}\r\n            />\r\n        </div>\r\n          \r\n        <div>\r\n          Author:\r\n            <input\r\n            type=\"text\"\r\n            value={newAuthor}\r\n            onChange={handleAuthor}\r\n            />\r\n        </div>\r\n          \r\n        <div>\r\n          Content:\r\n            <input\r\n            type=\"text\"\r\n            value={newContent}\r\n            onChange={handleContent}\r\n            />\r\n        </div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n      \r\n      <div>\r\n        {blogs.map(blog => \r\n          <Blog key={blog.id} blog={blog} />\r\n        )}\r\n      </div>  \r\n    </form>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React, { useState, useEffect, useRef } from 'react'\nimport blogService from './services/blogs' \nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglabe'\nimport BlogForm from './components/BlogForm'\nimport './App.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    const getBlogs = async () => {\n      const blogs = await blogService.getAll()\n      setBlogs(blogs)\n      }\n    getBlogs()\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  // Handlers \n\n  const handleLogin = (user) => {\n    try {\n      blogService.setToken(user.token)\n      setUser(user)\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  // ----- Add blog function ------\n  const addBlog = async (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    const blog = blogService.createBlog(blogObject)\n    const returned = await blog\n    setBlogs(blogs.concat(returned))\n  }\n\n  console.log(user)\n\n  const loginForm = () => (\n    <Togglable buttonLabel='login'>\n      <LoginForm \n        handleLogin ={handleLogin}\n        />\n    </Togglable>\n  )\n\n  const blogFormRef = useRef()\n\n  const blogForm = () => (\n    <Togglable buttonLabel=\"new note\" ref={blogFormRef}>\n      <BlogForm\n        createBlog={addBlog}\n        blogs={blogs}\n      />   \n    </Togglable>\n  )  \n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n    \n\n  return (\n    <div className=\"App\">\n      <h2>Blogs</h2>\n\n      <Notification message={errorMessage}/>\n\n      {user === null ? \n        loginForm() :\n        <div>\n          <p>\n            {user.name} logged-in\n            <button onClick={(() => logOut())}>Log out</button>\n          </p>\n          {blogForm()}\n        </div> \n      }\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}