{"version":3,"sources":["components/Blog.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","components/Togglabe.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","updateBlog","delBlog","useState","visible","setVisible","showDetails","display","hideDetails","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","likes","author","content","onClick","id","Notification","message","LoginForm","username","password","handleUsernameChange","handlePasswordChange","handleLogin","onSubmit","value","onChange","type","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newContent","setNewContent","event","preventDefault","target","Togglable","React","forwardRef","props","ref","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","baseUrl","token","getAll","a","axios","get","response","data","getOne","newObject","config","headers","Authorization","post","update","request","put","setToken","newToken","deleteBlog","delete","login","credentials","App","blogs","setBlogs","user","setUser","errorMessage","setErrorMessage","showAll","setShowAll","setUsername","setPassword","blogFormRef","useRef","useEffect","blogService","then","initialBlogs","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","addBlog","blogObject","current","returnedBlog","concat","find","toUpdate","updateo","map","filter","name","removeItem","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23f3ec5c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Blog = ({ blog, updateBlog, delBlog }) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showDetails = { display: visible ? '' : 'none' }\r\n  const hideDetails = { display: visible ? 'none' : '' }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const like = (id) => {\r\n    updateBlog(id)\r\n  }\r\n\r\n  const deletBlog = (id) => {\r\n    delBlog(id)\r\n  }\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n      <div style={hideDetails} className=\"blog-preview\">\r\n        <b>Title: </b> {blog.title} <b>Likes: </b> {blog.likes}\r\n        <hr></hr>\r\n      </div>\r\n      <div style={showDetails} className=\"blog-full\">\r\n        <b>Title: </b> {blog.title}\r\n        <br></br>\r\n        <b>Author: </b> {blog.author}\r\n        <br></br>\r\n        <b>Content: </b> {blog.content}\r\n        <br></br>\r\n        <b>Likes: </b> {blog.likes}\r\n        <button onClick={() => like(blog.id, blog.title, blog.author, blog.content, blog.likes)}>Like</button>\r\n        <br></br>\r\n      </div>\r\n      <button onClick={() => setVisible(!visible)}>\r\n        { visible ? 'Hide' : 'More' }\r\n      </button>\r\n      <button onClick={() => deletBlog(blog.id)}>Delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog","import '../App.css'\r\nimport React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({\r\n  username,\r\n  password,\r\n  handleUsernameChange,\r\n  handlePasswordChange,\r\n  handleLogin,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button id=\"login-button\" type=\"submit\">\r\n          login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [newTitle, setNewTitle] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newContent, setNewContent] = useState('')\r\n\r\n  const handleTitle = event => {\r\n    setNewTitle(event.target.value)\r\n  }\r\n\r\n  const handleAuthor = event => {\r\n    setNewAuthor(event.target.value)\r\n  }\r\n\r\n  const handleContent = event => {\r\n    setNewContent(event.target.value)\r\n  }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: newTitle,\r\n      author: newAuthor,\r\n      content: newContent,\r\n      likes: 0\r\n    })\r\n\r\n    setNewTitle('')\r\n    setNewAuthor('')\r\n    setNewContent('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"formDiv\">\r\n      <form onSubmit={addBlog}>\r\n        <div>\r\n            Title:\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            value={newTitle}\r\n            onChange={handleTitle}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n            Author:\r\n          <input\r\n            type=\"text\"\r\n            value={newAuthor}\r\n            onChange={handleAuthor}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n            Content:\r\n          <input\r\n            type=\"text\"\r\n            value={newContent}\r\n            onChange={handleContent}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm","/* eslint-disable linebreak-style */\r\nimport React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"blog-full\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl, token)\r\n  return response.data\r\n}\r\n\r\nconst getOne = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst createBlog = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = axios.put(`${ baseUrl }/${id}`, newObject)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const request = axios.delete(`${ baseUrl }/${id}`, config)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, createBlog, update, setToken, deleteBlog, getOne }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","/* eslint-disable linebreak-style */\nimport React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglabe'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './App.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [showAll, setShowAll] = useState(true)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs => {\n        setBlogs(initialBlogs)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  // ----- Handlers ------\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n  // ----- Add blog function ------\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .createBlog(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n      })\n  }\n\n  // ----- Update Blog -----\n  const updateBlog = async (id) => {\n    const blog = blogs.find(blog => blog.id === id)\n    const toUpdate = { ...blog, likes: blog.likes + 1 }\n    const updateo = await blogService.update(id, toUpdate)\n    setBlogs(blogs.map(blog => blog.id !== id ? blog : updateo))\n  }\n\n  // ----- Delete Blog -----\n  const delBlog = async (id) => {\n    await blogService.deleteBlog(id)\n    setBlogs(blogs.filter(blog => blog.id !== id))\n  }\n\n  // ----- Forms -------\n  const loginForm = () => (\n    <Togglable buttonLabel='login'>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleLogin ={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const blogForm = () => (\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\n      <BlogForm\n        createBlog={addBlog}\n      />\n    </Togglable>\n  )\n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>Blogs</h2>\n      <Notification message={errorMessage}/>\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>\n            {user.name} logged-in\n            <button onClick={(() => logOut())}>Log out</button>\n          </p>\n          {blogForm()}\n        </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          {showAll ? 'hide' : 'show'}\n        </button>\n      </div>\n\n      <ul>\n        {showAll === true ?\n          blogs.map((blog, i) =>\n            <Blog\n              key={i}\n              blog={blog}\n              updateBlog={updateBlog}\n              delBlog={delBlog} />\n          )\n          : ''\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","/* eslint-disable linebreak-style */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}