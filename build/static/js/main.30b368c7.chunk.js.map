{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","App.js","index.js"],"names":["Blog","blog","title","likes","baseUrl","token","getAll","a","request","axios","get","response","data","createBlog","newObject","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","Notification","message","className","App","useState","blogs","setBlogs","newTitle","setNewTitle","newAuthor","setNewAuthor","newContent","setNewContent","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","useEffect","blogService","getBlogs","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleTitle","event","target","value","handleAuthor","vale","handleContent","addBlog","preventDefault","blogObject","author","content","returned","concat","handleLogin","loginService","setItem","stringify","setTimeout","console","log","onSubmit","type","name","onChange","onClick","removeItem","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30b368c7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Blog = ({ blog }) => { \r\n  return (\r\n    <div>\r\n      <b>Title: </b> {blog.title} <b>Likes: </b> {blog.likes} \r\n    <hr></hr>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const request = axios.get(baseUrl)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst createBlog = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\r\n  const response = await request \r\n  return response.data\r\n}\r\n\r\nexport default { getAll, createBlog, update, setToken } ","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data \r\n}\r\n\r\nexport default { login }","import '../App.css'\r\nimport React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  } \r\n\r\n  export default Notification ","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs' \nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport './App.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newContent, setNewContent] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    const getBlogs = async () => {\n      const blogs = await blogService.getAll()\n      setBlogs(blogs)\n      }\n    getBlogs()\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleTitle = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthor = (event) => {\n    setNewAuthor(event.target.vale)\n  }\n\n  const handleContent = (event) => {\n    setNewContent(event.target.value)\n  }\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      content: newContent,\n      }\n    const blog = blogService.createBlog(blogObject)\n    const returned = await blog\n    setBlogs(blogs.concat(returned))\n\n    setNewTitle('')\n    setNewAuthor('')\n    setNewContent('')\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n  \n  console.log(user)\n\n  const loginForm = () => (\n      <form onSubmit={handleLogin}>\n          <div>\n            username\n              <input\n              type=\"text\"\n              value={username}\n              name=\"Username\"\n              onChange={({ target }) => setUsername(target.value)}\n              />\n          </div>\n          <div>\n            password\n              <input\n              type=\"password\"\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)}\n              />\n          </div>\n          <button type=\"submit\">login</button>\n        </form>\n  )\n  \n  const blogForm = () => (\n    <form onSubmit={addBlog}>\n      <div>\n        <div>\n          Title:  \n            <input\n            type=\"text\"\n            value={newTitle}\n            onChange={handleTitle}\n            />\n        </div>\n          \n        <div>\n          Author:\n            <input\n            type=\"text\"\n            value={newAuthor}\n            onChange={handleAuthor}\n            />\n        </div>\n          \n        <div>\n          Content:\n            <input\n            type=\"text\"\n            value={newContent}\n            onChange={handleContent}\n            />\n        </div>\n        <button type=\"submit\">Add</button>\n      </div>\n      \n      <div>\n        {blogs.map(blog => \n          <Blog key={blog.id} blog={blog} />\n        )}\n      </div>  \n    </form>\n  )\n  \n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n    \n\n  return (\n    <div className=\"App\">\n      <h2>Blogs</h2>\n\n      <Notification message={errorMessage}/>\n\n      {user === null ? \n        loginForm() :\n        <div>\n          <p>\n            {user.name} logged-in\n            <button onClick={(() => logOut())}>Log out</button>\n          </p>\n          {blogForm()}\n        </div> \n      }\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}